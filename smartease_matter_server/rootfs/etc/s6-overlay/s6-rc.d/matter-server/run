#!/usr/bin/with-contenv bashio
# ==============================================================================
# SmartEase Matter Server - Offline-first with hardcoded tap0 interface
# ==============================================================================

bashio::log.info "Starting SmartEase Matter Server..."

# Declare variables
declare server_port
declare log_level
declare log_level_sdk
declare primary_interface="tap0"
declare matter_server_version
declare chip_version
matter_server_args=()
extra_args=()

# Set log levels
log_level=$(bashio::string.lower "$(bashio::config log_level info)")
log_level_sdk=$(bashio::string.lower "$(bashio::config log_level_sdk error)")

# Install specified Matter Server version if provided
if bashio::config.has_value "matter_server_version"; then
  matter_server_version=$(bashio::config 'matter_server_version')
  bashio::log.info "Installing Matter Server ${matter_server_version}"
  pip3 install --pre python-matter-server[server]=="${matter_server_version}"
elif bashio::config.true "beta"; then
  bashio::log.info "Installing latest beta Matter Server"
  pip3 install --upgrade --pre python-matter-server[server]
fi

# Install Matter SDK if specified
if bashio::config.has_value "matter_sdk_wheels_version"; then
  chip_version=$(bashio::config 'matter_sdk_wheels_version')
  bashio::log.info "Installing Matter SDK ${chip_version}"
  pip3 install --pre --no-dependencies \
    home-assistant-chip-clusters=="${chip_version}" \
    home-assistant-chip-core=="${chip_version}"
fi

# Determine the port to use and fallback binding
server_port="$(bashio::addon.port 5580)"
if ! bashio::var.has_value "${server_port}"; then
  server_port=5580
  extra_args+=('--listen-address' "$(bashio::addon.ip_address)")
fi

# Optional runtime flags
if bashio::config.true "enable_test_net_dcl"; then
  extra_args+=('--enable-test-net-dcl')
fi
if bashio::config.has_value "bluetooth_adapter_id"; then
  extra_args+=('--bluetooth-adapter' "$(bashio::config 'bluetooth_adapter_id')")
fi
if bashio::config.has_value "matter_server_args"; then
  extra_args+=($(bashio::config 'matter_server_args'))
fi

# Log forced interface
bashio::log.info "Using hardcoded primary interface: ${primary_interface}"

# Notify Home Assistant
/etc/s6-overlay/scripts/matter-server-discovery &

# Change to working directory
cd /root

# Construct final arguments
matter_server_args+=(
  '--storage-path' "/data"
  '--port' "${server_port}"
  '--log-level' "${log_level}"
  '--log-level-sdk' "${log_level_sdk}"
  '--primary-interface' "${primary_interface}"
  '--paa-root-cert-dir' "/data/credentials"
  '--ota-provider-dir' "/config/updates"
  '--fabricid' 2
  '--vendorid' 4939
  "${extra_args[@]}"
)

# Start the server
if bashio::config.true "beta"; then
  exec /usr/bin/gdb --quiet -ex="set confirm off" -ex run -ex backtrace -ex "quit \$_exitcode" --args \
       /usr/local/bin/python /usr/local/bin/matter-server "${matter_server_args[@]}"
else
  exec /usr/local/bin/matter-server "${matter_server_args[@]}"
fi

