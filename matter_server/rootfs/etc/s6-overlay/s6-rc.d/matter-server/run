#!/usr/bin/with-contenv bashio
# vim: ft=bash
# shellcheck shell=bash
# ==============================================================================
# Start matter-server service for SmartEase Hub with forced tap0 interface
# ==============================================================================

bashio::log.info "Starting Matter Server..."

declare server_port
declare log_level
declare log_level_sdk
declare primary_interface="tap0"  # Force SmartEase offline interface
declare matter_server_version
declare chip_version
matter_server_args=()
extra_args=()

# Set default log level if not provided
if ! bashio::config.exists log_level; then
  bashio::log.magenta 'No log_level set in config, fallback to info'
fi
log_level=$(bashio::string.lower "$(bashio::config log_level info)")

# Make Matter SDK log level currently default to error
log_level_sdk=$(bashio::string.lower "$(bashio::config log_level_sdk error)")

# Install specified Matter Server version, or upgrade to beta if configured
if bashio::config.has_value "matter_server_version"; then
  matter_server_version=$(bashio::config 'matter_server_version')
  bashio::log.info "Installing Python Matter Server ${matter_server_version}"
  # shellcheck disable=SC2102
  pip3 install --pre python-matter-server[server]=="${matter_server_version}"
elif bashio::config.true "beta"; then
  bashio::log.info 'Upgrading Python Matter Server to latest pre-release'
  # shellcheck disable=SC2102
  pip3 install --upgrade --pre python-matter-server[server]
fi

# Install the Matter SDK version if configured
if bashio::config.has_value "matter_sdk_wheels_version"; then
  chip_version=$(bashio::config 'matter_sdk_wheels_version')
  bashio::log.info "Installing Matter SDK ${chip_version}"
  pip3 install --pre --no-dependencies \
    home-assistant-chip-clusters=="${chip_version}" \
    home-assistant-chip-core=="${chip_version}"
fi

# Bind to internal hassio network unless the user requests to expose it
server_port="$(bashio::addon.port 5580)"
if ! bashio::var.has_value "${server_port}"; then
    server_port=5580
    extra_args+=('--listen-address' "$(bashio::addon.ip_address)")
fi

if bashio::config.true "enable_test_net_dcl"; then
    extra_args+=('--enable-test-net-dcl')
fi

# Use tap0 for the primary interface (forced)
bashio::log.info "Forcing ${primary_interface} as the primary network interface."

# Send out discovery information to Home Assistant
/etc/s6-overlay/scripts/matter-server-discovery &

# Change directory to /root
cd /root

# Prepare the matter-server arguments
matter_server_args+=(
  '--storage-path' "/data"
  '--port' "${server_port}"
  '--log-level' "${log_level}"
  '--log-level-sdk' "${log_level_sdk}"
  '--primary-interface' "${primary_interface}"
  '--paa-root-cert-dir' "/data/credentials"
  '--ota-provider-dir' "/config/updates"
  '--fabricid' 2
  '--vendorid' 4939
  ${extra_args[@]}
)

# Run the Matter Server, using gdb in beta mode if configured
if bashio::config.true "beta"; then
    exec /usr/bin/gdb --quiet -ex="set confirm off" -ex run -ex backtrace -ex "quit \$_exitcode" --args /usr/local/bin/python \
         /usr/local/bin/matter-server "${matter_server_args[@]}"
else
    exec /usr/local/bin/matter-server "${matter_server_args[@]}"
fi

